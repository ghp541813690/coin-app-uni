<template>
  <view v-if="visible" class="popup-overlay" @click="closePopup">
    <view class="popup-container" @click.stop>
      <!-- 应用图标 -->
      <view class="app-icon">
        <image 
          :src="appIcon" 
          class="icon-image"
          mode="aspectFit"
        />
      </view>
      
      <!-- 应用信息 -->
      <view class="app-info">
        <text class="app-name">{{ appInfo.appName }}</text>
        <text class="app-package">{{ appInfo.packageName }}</text>
        <text class="launch-time">{{ formatTime(appInfo.launchTime) }}</text>
      </view>
      
      <!-- 操作按钮 -->
      <view class="action-buttons">
        <button 
          class="action-btn primary"
          @click="openApp"
        >
          打开应用
        </button>
        <button 
          class="action-btn secondary"
          @click="closePopup"
        >
          关闭
        </button>
      </view>
      
      <!-- 关闭按钮 -->
      <view class="close-btn" @click="closePopup">
        <text class="close-icon">×</text>
      </view>
    </view>
  </view>
</template>

<script>
interface AppInfo {
  packageName: string;
  appName: string;
  launchTime: number;
  pid?: number;
}

export default {
  name: 'AppLaunchPopup',
  props: {
    visible: {
      type: Boolean,
      default: false
    },
    appInfo: {
      type: Object as () => AppInfo,
      default: () => ({
        packageName: '',
        appName: '',
        launchTime: 0
      })
    }
  },
  
  data() {
    return {
      appIcon: '/static/default-app-icon.png'
    }
  },
  
  watch: {
    visible(newVal: boolean) {
      if (newVal) {
        this.loadAppIcon()
        // 自动关闭
        setTimeout(() => {
          this.closePopup()
        }, 5000)
      }
    }
  },
  
  methods: {
    closePopup() {
      this.$emit('close')
    },
    
    openApp() {
      // #ifdef APP-ANDROID
      const intent = new android.content.Intent()
      intent.setAction(android.content.Intent.ACTION_MAIN)
      intent.addCategory(android.content.Intent.CATEGORY_LAUNCHER)
      intent.setPackage(this.appInfo.packageName)
      
      try {
        const activity = UTSAndroid.getUniActivity()
        activity.startActivity(intent)
      } catch (error) {
        uni.showToast({
          title: '无法打开应用',
          icon: 'none'
        })
      }
      // #endif
      
      // #ifdef APP-IOS
      // iOS 无法直接打开其他应用
      uni.showToast({
        title: 'iOS 无法直接打开其他应用',
        icon: 'none'
      })
      // #endif
      
      this.closePopup()
    },
    
    loadAppIcon() {
      // #ifdef APP-ANDROID
      try {
        const packageManager = UTSAndroid.getUniActivity().getPackageManager()
        const packageInfo = packageManager.getPackageInfo(this.appInfo.packageName, 0)
        const icon = packageInfo.applicationInfo.loadIcon(packageManager)
        
        // 这里需要将 Drawable 转换为图片路径
        // 简化处理，使用默认图标
        this.appIcon = '/static/default-app-icon.png'
      } catch (error) {
        this.appIcon = '/static/default-app-icon.png'
      }
      // #endif
      
      // #ifdef APP-IOS
      this.appIcon = '/static/default-app-icon.png'
      // #endif
    },
    
    formatTime(timestamp: number): string {
      const date = new Date(timestamp)
      const now = new Date()
      const diff = now.getTime() - timestamp
      
      if (diff < 60000) { // 1分钟内
        return '刚刚'
      } else if (diff < 3600000) { // 1小时内
        return `${Math.floor(diff / 60000)}分钟前`
      } else if (diff < 86400000) { // 24小时内
        return `${Math.floor(diff / 3600000)}小时前`
      } else {
        return date.toLocaleDateString()
      }
    }
  }
}
</script>

<style>
.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.popup-container {
  background: white;
  border-radius: 20rpx;
  padding: 40rpx;
  margin: 40rpx;
  max-width: 600rpx;
  width: 100%;
  position: relative;
  box-shadow: 0 10rpx 30rpx rgba(0, 0, 0, 0.3);
  animation: popupSlideIn 0.3s ease-out;
}

@keyframes popupSlideIn {
  from {
    opacity: 0;
    transform: translateY(50rpx) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.app-icon {
  text-align: center;
  margin-bottom: 30rpx;
}

.icon-image {
  width: 120rpx;
  height: 120rpx;
  border-radius: 20rpx;
  background-color: #f0f0f0;
}

.app-info {
  text-align: center;
  margin-bottom: 40rpx;
}

.app-name {
  font-size: 36rpx;
  font-weight: bold;
  color: #333;
  display: block;
  margin-bottom: 10rpx;
}

.app-package {
  font-size: 24rpx;
  color: #666;
  display: block;
  margin-bottom: 10rpx;
}

.launch-time {
  font-size: 24rpx;
  color: #999;
  display: block;
}

.action-buttons {
  display: flex;
  gap: 20rpx;
}

.action-btn {
  flex: 1;
  height: 80rpx;
  border-radius: 40rpx;
  border: none;
  font-size: 28rpx;
  font-weight: bold;
}

.action-btn.primary {
  background: linear-gradient(135deg, #4CAF50, #45a049);
  color: white;
}

.action-btn.secondary {
  background: #f5f5f5;
  color: #666;
  border: 1rpx solid #ddd;
}

.close-btn {
  position: absolute;
  top: 20rpx;
  right: 20rpx;
  width: 60rpx;
  height: 60rpx;
  border-radius: 30rpx;
  background: #f5f5f5;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.close-icon {
  font-size: 40rpx;
  color: #999;
  font-weight: bold;
}
</style>